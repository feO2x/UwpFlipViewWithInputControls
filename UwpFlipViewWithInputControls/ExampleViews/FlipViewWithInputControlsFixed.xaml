<UserControl x:Class="UwpFlipViewWithInputControls.ExampleViews.FlipViewWithInputControlsFixed"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:a="using:UwpFlipViewWithInputControls.Assets"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             d:DesignHeight="1024"
             d:DesignWidth="1920">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <FlipView Grid.RowSpan="2">
            <FlipView.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" AreScrollSnapPointsRegular="True" />
                </ItemsPanelTemplate>
            </FlipView.ItemsPanel>
            <FlipViewItem>
                <a:InputControls />
            </FlipViewItem>
            <FlipViewItem>
                <a:InputControls />
            </FlipViewItem>
        </FlipView>
        <Border Grid.Row="0" Style="{StaticResource OverlayBorderStyle}">
            <TextBlock Style="{StaticResource OverlayTextStyle}">This "bug" occurs because of the VirtualizingStackPanel that is used as the items host in the FlipView. If you exchange it with a normal StackPanel, input controls are correctly scrolled when the touch keyboard fades in. Please note that you loose UI Virtualization in this case, so you'll use up more memory and the load time of the FlipView can be significantly higher.</TextBlock>
        </Border>
    </Grid>
</UserControl>